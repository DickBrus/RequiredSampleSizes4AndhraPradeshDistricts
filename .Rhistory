#For comparison compute binomial distribution with pi equal to mean of beta distribution
meanbeta <- a/(a+b)
d.bin <- dbinom(x, size=n, prob=meanbeta)
library(reshape2)
df <- data.frame(d.bbin,d.bin)
df <- melt(df)
df$x <- rep(seq(from=0,to=n,by=1),2)
names(df)[1] <- "Distribution"
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
ggplot(df, aes(x=x, y=value, fill=variable), xlab="x", ylab="Density")+
geom_bar(stat="identity", position="dodge")
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
ggplot(df, aes(x=x, y=value, fill=Distribution), xlab="x", ylab="Density")+
geom_bar(stat="identity", position="dodge")
dev.off()
betabin <- dbbinom(x, size=n,alpha=a, beta=b)
#For comparison compute binomial distribution with pi equal to mean of beta distribution
meanbeta <- a/(a+b)
bin <- dbinom(x, size=n, prob=meanbeta)
library(reshape2)
df <- data.frame(betabin,bin)
df <- melt(df)
df$x <- rep(seq(from=0,to=n,by=1),2)
names(df)[1] <- "Distribution"
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
ggplot(df, aes(x=x, y=value, fill=Distribution), xlab="x", ylab="Density")+
geom_bar(stat="identity", position="dodge")
dev.off()
library(extraDistr)
n0 <- nlegacy[13]/1000 #prior sample size
pi0 <- f[13] #prior binomial proportion parameter: West Godavari
#compute parameters of beta distribution for pi
a <- n0*pi0+1
b <- n0*(1-pi0)+1
#compute densities of betabinomial distribution
n <- 75
x <- 0:n
betabin <- dbbinom(x, size=n,alpha=a, beta=b)
#For comparison compute binomial distribution with pi equal to mean of beta distribution
meanbeta <- a/(a+b)
bin <- dbinom(x, size=n, prob=meanbeta)
library(reshape2)
df <- data.frame(betabin,bin)
df <- melt(df)
df$x <- rep(seq(from=0,to=n,by=1),2)
names(df)[1] <- "Distribution"
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
ggplot(df, aes(x=x, y=value, fill=Distribution), xlab="x", ylab="Density")+
geom_bar(stat="identity", position="dodge")
dev.off()
library(extraDistr)
n0 <- nlegacy[13]/1000 #prior sample size
pi0 <- f[13] #prior binomial proportion parameter: West Godavari
#compute parameters of beta distribution for pi
a <- n0*pi0+1
b <- n0*(1-pi0)+1
#compute densities of betabinomial distribution
n <- 70
x <- 0:n
betabin <- dbbinom(x, size=n,alpha=a, beta=b)
#For comparison compute binomial distribution with pi equal to mean of beta distribution
meanbeta <- a/(a+b)
bin <- dbinom(x, size=n, prob=meanbeta)
library(reshape2)
df <- data.frame(betabin,bin)
df <- melt(df)
df$x <- rep(seq(from=0,to=n,by=1),2)
names(df)[1] <- "Distribution"
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
ggplot(df, aes(x=x, y=value, fill=Distribution), xlab="x", ylab="Density")+
geom_bar(stat="identity", position="dodge")
dev.off()
library(extraDistr)
n0 <- nlegacy[13]/1000 #prior sample size
pi0 <- f[13] #prior binomial proportion parameter: West Godavari
#compute parameters of beta distribution for pi
a <- n0*pi0+1
b <- n0*(1-pi0)+1
#compute densities of betabinomial distribution
n <- 100
x <- 0:n
betabin <- dbbinom(x, size=n,alpha=a, beta=b)
#For comparison compute binomial distribution with pi equal to mean of beta distribution
meanbeta <- a/(a+b)
bin <- dbinom(x, size=n, prob=meanbeta)
library(reshape2)
df <- data.frame(betabin,bin)
df <- melt(df)
df$x <- rep(seq(from=0,to=n,by=1),2)
names(df)[1] <- "Distribution"
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
ggplot(df, aes(x=x, y=value, fill=Distribution), xlab="x", ylab="Density")+
geom_bar(stat="identity", position="dodge")
dev.off()
sigma20 <- 0.407
mu0 <- -0.06
#Prior sample size
n0 <- 100
#choose coefficient of variation of gamma distribution for precision parameter lambda = 1/sigma2
cv <- 0.25
#compute parameters of gamma distribution for precision parameter
a <- 1/cv^2
b <- a/(1/sigma20)
#plot densities
lambda <-seq(from=0.01,to=5,by=0.01)
d.gamma <- dgamma(lambda,a,b)
df <- data.frame(lambda,d.gamma)
ggplot(df)+
geom_line(aes(x=lambda,y=d.gamma))+
scale_y_continuous(name="Density")+
xlab(expression(lambda))
#Draw random numbers from normal inverse-gamma distribution
rnormgamma <- function(n, mu0, n0, alpha, beta) {
if (length(n) > 1)
n <- length(n)
lambda <- rgamma(n, alpha, beta)
x <- rnorm(n, mu0, sqrt(1/(n0*lambda)))
data.frame(lambda = lambda, x = x)
}
draws <- rnormgamma(10000,mu0=mu0,n0=n0,alpha=a,beta=b)
#x follows a shifted scaled t-distribution with 2a degrees of freedom: sqrt(a*n0/b)*(x-mu0) ~ t
library(metRology)
scale <- sqrt(a*n0/b)
df <- 2*a
x <- seq(from=-0.8,to=0.6,by=0.01)
d.tscaled <- dt.scaled(x,df=df,sd=1/scale,mean=mu0)
hist(draws$x,freq=FALSE,main="",xlab="x")
lines(x=x,y=d.tscaled)
sigma20 <- 0.407
mu0 <- -0.06
#Prior sample size
n0 <- 10
#choose coefficient of variation of gamma distribution for precision parameter lambda = 1/sigma2
cv <- 0.25
#compute parameters of gamma distribution for precision parameter
a <- 1/cv^2
b <- a/(1/sigma20)
#plot densities
lambda <-seq(from=0.01,to=5,by=0.01)
d.gamma <- dgamma(lambda,a,b)
df <- data.frame(lambda,d.gamma)
ggplot(df)+
geom_line(aes(x=lambda,y=d.gamma))+
scale_y_continuous(name="Density")+
xlab(expression(lambda))
#Draw random numbers from normal inverse-gamma distribution
rnormgamma <- function(n, mu0, n0, alpha, beta) {
if (length(n) > 1)
n <- length(n)
lambda <- rgamma(n, alpha, beta)
x <- rnorm(n, mu0, sqrt(1/(n0*lambda)))
data.frame(lambda = lambda, x = x)
}
draws <- rnormgamma(10000,mu0=mu0,n0=n0,alpha=a,beta=b)
#x follows a shifted scaled t-distribution with 2a degrees of freedom: sqrt(a*n0/b)*(x-mu0) ~ t
library(metRology)
scale <- sqrt(a*n0/b)
df <- 2*a
x <- seq(from=-0.8,to=0.6,by=0.01)
d.tscaled <- dt.scaled(x,df=df,sd=1/scale,mean=mu0)
hist(draws$x,freq=FALSE,main="",xlab="x")
lines(x=x,y=d.tscaled)
sigma20 <- 0.407
mu0 <- -0.06
#Prior sample size
n0 <- 500
#choose coefficient of variation of gamma distribution for precision parameter lambda = 1/sigma2
cv <- 0.25
#compute parameters of gamma distribution for precision parameter
a <- 1/cv^2
b <- a/(1/sigma20)
#Draw random numbers from normal inverse-gamma distribution
rnormgamma <- function(n, mu0, n0, alpha, beta) {
if (length(n) > 1)
n <- length(n)
lambda <- rgamma(n, alpha, beta)
x <- rnorm(n, mu0, sqrt(1/(n0*lambda)))
data.frame(lambda = lambda, x = x)
}
draws <- rnormgamma(10000,mu0=mu0,n0=n0,alpha=a,beta=b)
#x follows a shifted scaled t-distribution with 2a degrees of freedom: sqrt(a*n0/b)*(x-mu0) ~ t
library(metRology)
scale <- sqrt(a*n0/b)
df <- 2*a
x <- seq(from=-0.8,to=0.6,by=0.01)
d.tscaled <- dt.scaled(x,df=df,sd=1/scale,mean=mu0)
hist(draws$x,freq=FALSE,main="",xlab="x")
lines(x=x,y=d.tscaled)
a/b
?dt.scaled
sigma20 <- 0.407
mu0 <- -0.06
#Prior sample size
n0 <- 38
#choose coefficient of variation of gamma distribution for precision parameter lambda = 1/sigma2
cv <- 0.25
#compute parameters of gamma distribution for precision parameter
a <- 1/cv^2
b <- a/(1/sigma20)
#Draw random numbers from normal inverse-gamma distribution
rnormgamma <- function(n, mu0, n0, alpha, beta) {
if (length(n) > 1)
n <- length(n)
lambda <- rgamma(n, alpha, beta)
x <- rnorm(n, mu0, sqrt(1/(n0*lambda)))
data.frame(lambda = lambda, x = x)
}
draws <- rnormgamma(10000,mu0=mu0,n0=n0,alpha=a,beta=b)
#x follows a shifted scaled t-distribution with 2a degrees of freedom: sqrt(a*n0/b)*(x-mu0) ~ t
library(metRology)
scale <- sqrt(a*n0/b)
df <- 2*a
x <- seq(from=-0.8,to=0.6,by=0.01)
d.tscaled <- dt.scaled(x,df=df,sd=1/scale,mean=mu0)
hist(draws$x,freq=FALSE,main="",xlab="x")
lines(x=x,y=d.tscaled)
sqrt(var(draws$x))
scale
1/scale
library(extraDistr)
n0 <- nlegacy[13]/1000 #prior sample size
pi0 <- f[13] #prior binomial proportion parameter: West Godavari
#compute parameters of beta distribution for pi
a <- n0*pi0+1
b <- n0*(1-pi0)+1
#compute densities of betabinomial distribution
n <- 100
x <- 0:n
betabin <- dbbinom(x, size=n,alpha=a, beta=b)
#For comparison compute binomial distribution with pi equal to mean of beta distribution
meanbeta <- a/(a+b)
bin <- dbinom(x, size=n, prob=meanbeta)
library(reshape2)
df <- data.frame(bin,betabin)
df <- melt(df)
df$x <- rep(seq(from=0,to=n,by=1),2)
names(df)[1] <- "Distribution"
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
ggplot(df, aes(x=x, y=value, fill=Distribution), xlab="x", ylab="Density")+
geom_bar(stat="identity", position="dodge")
dev.off()
library(extraDistr)
n0 <- nlegacy[13]/1000 #prior sample size
pi0 <- f[13] #prior binomial proportion parameter: West Godavari
#compute parameters of beta distribution for pi
a <- n0*pi0+1
b <- n0*(1-pi0)+1
#compute densities of betabinomial distribution
n <- 100
x <- 0:n
betabin <- dbbinom(x, size=n,alpha=a, beta=b)
#For comparison compute binomial distribution with pi equal to mean of beta distribution
meanbeta <- a/(a+b)
bin <- dbinom(x, size=n, prob=meanbeta)
library(reshape2)
df <- data.frame(bin,betabin)
df <- melt(df)
df$x <- rep(seq(from=0,to=n,by=1),2)
names(df)[1] <- "Distribution"
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
ggplot(df, aes(x=x, y=value, fill=Distribution), xlab="z", ylab="Density")+
geom_bar(stat="identity", position="dodge")
dev.off()
library(extraDistr)
n0 <- nlegacy[13]/1000 #prior sample size
pi0 <- f[13] #prior binomial proportion parameter: West Godavari
#compute parameters of beta distribution for pi
a <- n0*pi0+1
b <- n0*(1-pi0)+1
#compute densities of betabinomial distribution
n <- 100
x <- 0:n
betabin <- dbbinom(x, size=n,alpha=a, beta=b)
#For comparison compute binomial distribution with pi equal to mean of beta distribution
meanbeta <- a/(a+b)
bin <- dbinom(x, size=n, prob=meanbeta)
library(reshape2)
df <- data.frame(bin,betabin)
df <- melt(df)
df$z <- rep(seq(from=0,to=n,by=1),2)
names(df)[1] <- "Distribution"
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
ggplot(df, aes(x=z, y=value, fill=Distribution), xlab="z", ylab="Density")+
geom_bar(stat="identity", position="dodge")
dev.off()
names(df)
library(extraDistr)
n0 <- nlegacy[13]/1000 #prior sample size
pi0 <- f[13] #prior binomial proportion parameter: West Godavari
#compute parameters of beta distribution for pi
a <- n0*pi0+1
b <- n0*(1-pi0)+1
#compute densities of betabinomial distribution
n <- 100
x <- 0:n
betabin <- dbbinom(x, size=n,alpha=a, beta=b)
#For comparison compute binomial distribution with pi equal to mean of beta distribution
meanbeta <- a/(a+b)
bin <- dbinom(x, size=n, prob=meanbeta)
library(reshape2)
df <- data.frame(bin,betabin)
df <- melt(df)
df$z <- rep(seq(from=0,to=n,by=1),2)
names(df)[c(1,2)] <- c("Distribution","Density")
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
ggplot(df, aes(x=z, y=value, fill=Distribution))+
geom_bar(stat="identity", position="dodge")
pdf(file="betabinomial_WGodavari.pdf",width=6,height=4)
ggplot(df, aes(x=z, y=Density, fill=Distribution))+
geom_bar(stat="identity", position="dodge")
dev.off()
library(ggplot2)
lambda <-seq(from=0.01,to=5,by=0.01)
cv <- 0.25
a <- 1/cv^2
b <- a/(1/sigma2[2])
dChittoor <- dgamma(lambda,a,b)
b <- a/(1/sigma2[9])
dPrakasam <- dgamma(lambda,a,b)
df <- data.frame(lambda,dChittoor,dPrakasam)
#pdf(file="GammaPriors.pdf",width=6,height=4)
ggplot(df)+
geom_line(aes(x=lambda,y=dChittoor))+
geom_line(aes(x=lambda,y=dPrakasam),colour="red")+
scale_y_continuous(name="Density")+
xlab(expression(lambda))
#dev.off()
#Prior point estimate of variance and mean for district Chittoor
sigma20 <- sigma2[2]
mu0 <- mu[2]
#Prior sample size
n0 <- nlegacy[2]/1000
#compute parameters of gamma distribution for precision parameter
a <- 1/cv^2
b <- a/(1/sigma20)
#Draw random numbers from normal inverse-gamma distribution
rnormgamma <- function(n, mu0, n0, alpha, beta) {
if (length(n) > 1)
n <- length(n)
lambda <- rgamma(n, alpha, beta)
x <- rnorm(n, mu0, sqrt(1/(n0*lambda)))
data.frame(lambda = lambda, x = x)
}
draws <- rnormgamma(10000,mu0=mu0,n0=n0,alpha=a,beta=b)
hist(draws$x)
#compute densities of shifted scaled t-distribution with 2a degrees of freedom: sqrt(a*n0/b)*(x-mu0) ~ t
library(metRology)
scale <- sqrt(a*n0/b)
df <- 2*a
x <- seq(from=-0.8,to=0.6,by=0.01)
d.tscaled <- dt.scaled(x,df=df,sd=1/scale,mean=mu0)
dat <- data.frame(x=x,den=d.tscaled)
pdf(file="tdistribution_Chittoor.pdf",width=6,height=4)
hist(draws$x,freq=FALSE,main="",xlab="z")
lines(x=x,y=d.tscaled)
dev.off()
setwd("C:/MyData/RequiredSampleSizes4AndhraPradeshDistricts")
n_means <- read.csv2(file="RequiredSampleSizes_Mean_mandals.csv",row.names=FALSE)
n_means <- read.csv2(file="RequiredSampleSizes_Mean_mandals.csv")
dn <- n_means-nlegacy
dat <- read.csv("c:/Users/brus003/OneDrive - Wageningen University & Research/SISIndia/AP_SHC_c1_processed_modelling_v201911.csv")
mandals <- sort(unique(dat$block))
Zn_crit <- 0.9
nlegacy <- mu <- sigma2 <- f <- numeric(length=length(mandals))
for (i in 1:length(mandals)) {
ids <- which(dat$block==mandals[i])
subdat <- dat[ids,]
nlegacy[i] <- sum(!is.na(subdat$Zn))
mu[i] <- mean(log(subdat$Zn),na.rm=TRUE)
sigma2[i] <- var(log(subdat$Zn),na.rm=TRUE)
f[i] <- sum(subdat$Zn < Zn_crit, na.rm=TRUE)/nlegacy[i]  # the district's fraction
}
nreq_means <- read.csv2(file="RequiredSampleSizes_Mean_mandals.csv")
head(nreq_means)
nreq_means <- read.csv(file="RequiredSampleSizes_Mean_mandals.csv")
head(nreq_means)
nreq_means <- read.csv(file="RequiredSampleSizes_Mean_mandals.csv",header=TRUE)
head(nreq_means)
dn <- nreq_means[,c(4,5,6,7,8,9)] - nlegacy
dn
summary(dn)
nreq_fractions <- read.csv(file="RequiredSampleSizes_ArealFraction_mandals.csv",header=TRUE)
dn <- nreq_fractions[,c(4,5,6,7,8,9)] - nlegacy
summary(dn)
hist(dn$alc)
ggplot(data = dn) +
geom_histogram(aes(x=dn$ALC),binwidth=500,colour="orange") +
scale_y_continuous(name = "Number of mandals") +
scale_x_continuous(name = "Surplus")
library(ggplot2)
ggplot(data = dn) +
geom_histogram(aes(x=dn$ALC),binwidth=500,colour="orange") +
scale_y_continuous(name = "Number of mandals") +
scale_x_continuous(name = "Surplus")
ggplot(data = dn) +
geom_histogram(aes(x=ALC),binwidth=500,colour="orange") +
scale_y_continuous(name = "Number of mandals") +
scale_x_continuous(name = "Surplus")
names(dn)
ggplot(data = dn) +
geom_histogram(aes(x=alc),binwidth=500,colour="orange") +
scale_y_continuous(name = "Number of mandals") +
scale_x_continuous(name = "Surplus")
ggplot(data = dn) +
geom_histogram(aes(x=alc),binwidth=250,colour="orange") +
scale_y_continuous(name = "Number of mandals") +
scale_x_continuous(name = "Surplus")
hist(dn$alc)
nreq_fractions <- read.csv(file="RequiredSampleSizes_ArealFraction_mandals.csv",header=TRUE)
dn <- nreq_fractions[,c(4,5,6,7,8,9)] - nlegacy
summary(dn)
pdf(file="SampleSurplusMandals_ArealFraction.pdf",width=6,height=4)
hist(dn$alc)
dev.off()
hist(dn$alc,main="")
pdf(file="SampleSurplusMandals_ArealFraction.pdf",width=6,height=4)
hist(dn$alc,main="")
dev.off()
nreq_means <- read.csv(file="RequiredSampleSizes_Mean_mandals.csv",header=TRUE)
dn <- nreq_means[,c(4,5,6,7,8,9)] - nlegacy
summary(dn)
pdf(file="SampleSurplusMandals_Mean.pdf",width=6,height=4)
hist(dn$alc.mbl,main="")
dev.off()
nreq_fractions <- read.csv(file="RequiredSampleSizes_ArealFraction_mandals.csv",header=TRUE)
dn <- nreq_fractions[,c(4,5,6,7,8,9)] - nlegacy
summary(dn)
pdf(file="SampleSurplusMandals_ArealFraction.pdf",width=6,height=4)
hist(dn$alc.mbl,main="")
dev.off()
?hist
nreq_fractions <- read.csv(file="RequiredSampleSizes_ArealFraction_mandals.csv",header=TRUE)
dn <- nreq_fractions[,c(4,5,6,7,8,9)] - nlegacy
hist(dn$alc.mbl,main="Areal fraction with Zn-deficiency",xlab="Sample surplus")
pdf(file="SampleSurplusMandals_ArealFraction.pdf",width=6,height=4)
hist(dn$alc.mbl,main="Areal fraction with Zn-deficiency",xlab="Sample surplus")
dev.off()
nreq_means <- read.csv(file="RequiredSampleSizes_Mean_mandals.csv",header=TRUE)
dn <- nreq_means[,c(4,5,6,7,8,9)] - nlegacy
pdf(file="SampleSurplusMandals_Mean.pdf",width=6,height=4)
hist(dn$alc.mbl,main="Areal fraction with Zn-deficiency",xlab="Sample surplus")
dev.off()
nreq_means <- read.csv(file="RequiredSampleSizes_Mean_mandals.csv",header=TRUE)
dn <- nreq_means[,c(4,5,6,7,8,9)] - nlegacy
pdf(file="SampleSurplusMandals_Mean.pdf",width=6,height=4)
hist(dn$alc.mbl,main="Mean of ln(zn)",xlab="Sample surplus")
dev.off()
nreq_means <- read.csv(file="RequiredSampleSizes_Mean_mandals.csv",header=TRUE)
dn <- nreq_means[,c(4,5,6,7,8,9)] - nlegacy
summary(dn)
hist(dn$alc.mbl,main="Mean of ln(Zn)",xlab="Sample surplus",breaks=from(-3000,to=500,by=250))
hist(dn$alc.mbl,main="Mean of ln(Zn)",xlab="Sample surplus",breaks=seq(from=-3000,to=500,by=250))
hist(dn$alc.mbl,main="Mean of ln(Zn)",xlab="Sample surplus",breaks=seq(from=-3000,to=750,by=250))
pdf(file="SampleSurplusMandals_Mean.pdf",width=6,height=4)
hist(dn$alc.mbl,main="Mean of ln(Zn)",xlab="Sample surplus",breaks=seq(from=-3000,to=750,by=250))
dev.off()
nreq_fractions <- read.csv(file="RequiredSampleSizes_ArealFraction_mandals.csv",header=TRUE)
dn <- nreq_fractions[,c(4,5,6,7,8,9)] - nlegacy
summary(dn)
pdf(file="SampleSurplusMandals_ArealFraction.pdf",width=6,height=4)
hist(dn$alc.mbl,main="Areal fraction with Zn-deficiency",xlab="Sample surplus",,breaks=seq(from=-3000,to=250,by=250))
dev.off()
nreq_fractions <- read.csv(file="RequiredSampleSizes_ArealFraction_mandals.csv",header=TRUE)
dn <- (nreq_fractions[,c(4,5,6,7,8,9)] - nlegacy)*-1
pdf(file="SampleSurplusMandals_ArealFraction.pdf",width=6,height=4)
hist(dn$alc.mbl,main="Areal fraction with Zn-deficiency",xlab="Sample surplus",,breaks=seq(from=-250,to=3000,by=250))
dev.off()
nreq_means <- read.csv(file="RequiredSampleSizes_Mean_mandals.csv",header=TRUE)
dn <- (nreq_means[,c(4,5,6,7,8,9)] - nlegacy)*-1
pdf(file="SampleSurplusMandals_Mean.pdf",width=6,height=4)
hist(dn$alc.mbl,main="Mean of ln(Zn)",xlab="Sample surplus",breaks=seq(from=-750,to=3000,by=250))
dev.off()
setwd("C:/MyData/RequiredSampleSizes4AndhraPradeshDistricts")
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("c:/Users/brus003/OneDrive - Wageningen University & Research/SISIndia/AP_SHC_c1_processed_modelling_v201911.csv")
districts <- sort(unique(dat$district))
Zn_crit <- 0.9
nlegacy <- mu <- sigma2 <- f <-  numeric(length=length(districts))
for (i in 1:length(districts)) {
ids <- which(dat$district==districts[i])
subdat <- dat[ids,]
nlegacy[i] <- sum(!is.na(subdat$Zn))
mu[i] <- mean(log(subdat$Zn),na.rm=TRUE)
sigma2[i] <- var(log(subdat$Zn),na.rm=TRUE)
f[i] <- sum(subdat$Zn < Zn_crit, na.rm=TRUE)/nlegacy[i]
}
(df <- data.frame(district=districts,n=nlegacy,mean=mu,var=sigma2,fraction=f))
library(ggplot2)
pi <-seq(from=0.01,to=0.99,by=0.01)
id <- which.min(f)
fmin <- f[id]
nprior <- nlegacy[id]/1000
a <- nprior*fmin+1
b <- nprior*(1-fmin)+1
dbeta.WGodavari <- dbeta(pi,a,b)
id <- which.max(f)
fmax <- f[id]
nprior <- nlegacy[id]/1000
a <- nprior*fmax+1
b <- nprior*(1-fmax)+1
dbeta.Nellore <- dbeta(pi,a,b)
library(binomSamSize)
library(SampleSizeBinomial)
nreq.wald <-  nreq.midp <- nreq.alc.bayes <- nreq.alc.mbl <- nreq.acc.bayes <- nreq.acc.mbl <- nreq.woc.bayes <- nreq.woc.mbl <-  numeric(length=length(districts))
wmax <- 0.1
conflevel <- 0.95
alpha <- 1-conflevel
worstlevel <- 0.80
n0 <- nlegacy/1000 #prior sample size
#n0 <- nlegacy
#n0 <- rep(0,length(districts))
