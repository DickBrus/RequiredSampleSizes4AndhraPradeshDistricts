knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("c:/Users/brus003/OneDrive - Wageningen University & Research/SISIndia/AP_SHC_c1_processed_modelling_v201911.csv")
dat <- read.csv("c:/Users/brus003/OneDrive - Wageningen University & Research/SISIndia/AP_SHC_c1_processed_modelling_v201911.csv")
districts <- sort(unique(dat$district))
Zn_crit <- 0.9
nlegacy <- mu <- sigma2 <- f <-  numeric(length=length(districts))
for (i in 1:length(districts)) {
ids <- which(dat$district==districts[i])
subdat <- dat[ids,]
nlegacy[i] <- sum(!is.na(subdat$Zn))
mu[i] <- mean(log(subdat$Zn),na.rm=TRUE)
sigma2[i] <- var(log(subdat$Zn),na.rm=TRUE)
f[i] <- sum(subdat$Zn < Zn_crit, na.rm=TRUE)/nlegacy[i]
}
(df <- data.frame(district=districts,n=nlegacy,mu=mu,var=sigma2,f=f))
(df <- data.frame(district=districts,n=nlegacy,mean=mu,var=sigma2,fraction=f))
library(SampleSizeMeans)
wmax <- 0.2 #maximum width of confidence interval
conflevel <- 0.95
worstlevel <- 0.80
lambda <- 1/sigma2 #prior estimate of precision parameter
cv <- 0.25 #coeffcient of variation of gamma distribution for lambda
nreq.freq <- nreq.alc.bayes <- nreq.alc.mbl <- nreq.acc.bayes <- nreq.acc.mbl <- nreq.woc.bayes <- nreq.woc.mbl <-  numeric(length=length(districts))
for (i in 1:length(districts)) {
a <- 1/cv^2
b <- a/lambda[i]
nreq.freq[i] <- mu.freq(len=wmax, lambda=a/b, level=conflevel)
nreq.alc.bayes[i] <- mu.alc(len=wmax, alpha=a, beta=b, n0=0, level=conflevel)
nreq.alc.mbl[i] <- mu.mblalc(len=wmax, alpha=a, beta=b, level=conflevel)
nreq.acc.bayes[i] <- mu.acc(len=wmax, alpha=a, beta=b, n0=0, level=conflevel)
nreq.acc.mbl[i] <- mu.mblacc(len=wmax, alpha=a, beta=b, level=conflevel)
nreq.woc.bayes[i] <- mu.modwoc(len=wmax, alpha=a, beta=b, n0=0, level=conflevel, worst.level=worstlevel)
nreq.woc.mbl[i] <- mu.mblmodwoc(len=wmax, alpha=a, beta=b, level=conflevel, worst.level=worstlevel)
}
(df <- data.frame(district=districts, lambda = round(lambda,2),
freq = nreq.freq,
alc = nreq.alc.bayes,
alc.mbl = nreq.alc.mbl,
acc = nreq.acc.bayes,
acc.mbl = nreq.acc.mbl,
woc = nreq.woc.bayes,
woc.mbl = nreq.woc.mbl))
library(binomSamSize)
library(SampleSizeBinomial)
nreq.wald <- nreq.alc.bayes <- nreq.alc.mbl <- nreq.acc.bayes <- nreq.acc.mbl <- nreq.woc.bayes <- nreq.woc.mbl <-  numeric(length=length(districts))
wmax <- 0.1
conflevel <- 0.95
worstlevel <- 0.80
n0 <- nlegacy/1000 #prior sample size
for (i in 1:length(districts)) {
a <- n0[i]*f[i]+1
b <- n0[i]*(1-f[i])+1
meanbeta <- a/(a+b)
nreq.wald[i] <- binomSamSize::ciss.wald(p0=meanbeta,d=wmax,alpha=1-conflevel)
out <- prop.alc(len=wmax,alpha=a,beta=b,level=conflevel,exact=TRUE)
nreq.alc.bayes[i] <- out$n
out <- prop.mblalc(len=wmax,alpha=a,beta=b,level=conflevel,exact=TRUE)
nreq.alc.mbl[i] <- out$n
out <- prop.acc(len=wmax,alpha=a,beta=b,level=conflevel,exact=TRUE)
nreq.acc.bayes[i] <- out$n
out <- prop.mblacc(len=wmax,alpha=a,beta=b,level=conflevel,exact=TRUE)
nreq.acc.mbl[i] <- out$n
out <- prop.modwoc(len=wmax,alpha=a,beta=b,level=conflevel,exact=TRUE,worst.level=worstlevel)
nreq.woc.bayes[i] <- out$n
out <- prop.mblmodwoc(len=wmax,alpha=a,beta=b,level=conflevel,exact=TRUE,worst.level=worstlevel)
nreq.woc.mbl[i] <- out$n
}
(df <- data.frame(district=districts, f = round(f,3),
wald = nreq.wald,
alc = nreq.alc.bayes,
alc.mbl = nreq.alc.mbl,
acc = nreq.acc.bayes,
acc.mbl = nreq.acc.mbl,
woc = nreq.woc.bayes,
woc.mbl = nreq.woc.mbl))
setwd("C:/MyData/RequiredSampleSizes4AndhraPradeshDistricts")
